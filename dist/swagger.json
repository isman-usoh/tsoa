{
	"basePath": "/v1",
	"consumes": [
		"application/json"
	],
	"definitions": {
		"TestModel": {
			"description": "This is a description of a model",
			"properties": {
				"numberValue": {
					"type": "number",
					"format": "double",
					"description": "This is a description of this model property, numberValue"
				},
				"numberArray": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					}
				},
				"stringValue": {
					"type": "string"
				},
				"stringArray": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"boolValue": {
					"type": "boolean"
				},
				"boolArray": {
					"type": "array",
					"items": {
						"type": "boolean"
					}
				},
				"enumValue": {
					"type": "string",
					"enum": [
						"0",
						"1"
					]
				},
				"enumArray": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"0",
							"1"
						]
					}
				},
				"enumNumberValue": {
					"type": "string",
					"enum": [
						"2",
						"5"
					]
				},
				"enumNumberArray": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"2",
							"5"
						]
					}
				},
				"enumStringValue": {
					"type": "string",
					"enum": [
						"VALUE_1",
						"VALUE_2"
					]
				},
				"enumStringArray": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"VALUE_1",
							"VALUE_2"
						]
					}
				},
				"modelValue": {
					"$ref": "#/definitions/TestSubModel"
				},
				"modelsArray": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TestSubModel"
					}
				},
				"strLiteralVal": {
					"type": "string",
					"enum": [
						"Foo",
						"Bar"
					]
				},
				"strLiteralArr": {
					"type": "array",
					"items": {
						"type": "string",
						"enum": [
							"Foo",
							"Bar"
						]
					}
				},
				"dateValue": {
					"type": "string",
					"format": "date-time"
				},
				"optionalString": {
					"type": "string"
				},
				"modelsObjectIndirect": {
					"$ref": "#/definitions/TestSubModelContainer"
				},
				"modelsObjectIndirectNS": {
					"$ref": "#/definitions/TestSubModelContainerNamespace.TestSubModelContainer"
				},
				"modelsObjectIndirectNS2": {
					"$ref": "#/definitions/TestSubModelContainerNamespace.InnerNamespace.TestSubModelContainer2"
				},
				"modelsObjectIndirectNS_Alias": {
					"$ref": "#/definitions/TestSubModelContainerNamespace_TestSubModelContainer"
				},
				"modelsObjectIndirectNS2_Alias": {
					"$ref": "#/definitions/TestSubModelContainerNamespace_InnerNamespace_TestSubModelContainer2"
				},
				"modelsArrayIndirect": {
					"$ref": "#/definitions/TestSubArrayModelContainer"
				},
				"modelsEnumIndirect": {
					"$ref": "#/definitions/TestSubEnumModelContainer"
				},
				"typeAliasCase1": {
					"$ref": "#/definitions/TypeAliasModelCase1"
				},
				"TypeAliasCase2": {
					"$ref": "#/definitions/TypeAliasModelCase2"
				},
				"id": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"numberValue",
				"numberArray",
				"stringValue",
				"stringArray",
				"boolValue",
				"boolArray",
				"modelValue",
				"modelsArray",
				"strLiteralVal",
				"strLiteralArr",
				"id"
			],
			"type": "object"
		},
		"TestSubModel": {
			"properties": {
				"email": {
					"type": "string"
				},
				"circular": {
					"$ref": "#/definitions/TestModel"
				},
				"id": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"email",
				"id"
			],
			"type": "object"
		},
		"TestSubModel2": {
			"properties": {
				"testSubModel2": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"circular": {
					"$ref": "#/definitions/TestModel"
				},
				"id": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"testSubModel2",
				"email",
				"id"
			],
			"type": "object"
		},
		"TestSubModelContainer": {
			"properties": {},
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/TestSubModel2"
			}
		},
		"TestSubModelNamespace.TestSubModelNS": {
			"properties": {
				"testSubModelNS": {
					"type": "boolean"
				},
				"email": {
					"type": "string"
				},
				"circular": {
					"$ref": "#/definitions/TestModel"
				},
				"id": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"testSubModelNS",
				"email",
				"id"
			],
			"type": "object"
		},
		"TestSubModelContainerNamespace.TestSubModelContainer": {
			"properties": {},
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/TestSubModelNamespace.TestSubModelNS"
			}
		},
		"TestSubModelContainerNamespace.InnerNamespace.TestSubModelContainer2": {
			"properties": {},
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/TestSubModelNamespace.TestSubModelNS"
			}
		},
		"TestSubModelContainerNamespace_TestSubModelContainer": {
			"properties": {},
			"type": "object"
		},
		"TestSubModelContainerNamespace_InnerNamespace_TestSubModelContainer2": {
			"properties": {},
			"type": "object"
		},
		"TestSubArrayModelContainer": {
			"properties": {},
			"type": "object",
			"additionalProperties": {
				"type": "array",
				"items": {
					"$ref": "#/definitions/TestSubModel2"
				}
			}
		},
		"TestSubEnumModelContainer": {
			"properties": {},
			"type": "object",
			"additionalProperties": {
				"type": "string",
				"enum": [
					"VALUE_1",
					"VALUE_2"
				]
			}
		},
		"TypeAliasModelCase1": {
			"properties": {
				"value1": {
					"type": "string"
				},
				"value2": {
					"type": "string"
				}
			},
			"required": [
				"value1",
				"value2"
			],
			"type": "object"
		},
		"TypeAliasModelCase2": {
			"properties": {
				"value1": {
					"type": "string"
				},
				"value2": {
					"type": "string"
				},
				"value3": {
					"type": "string"
				}
			},
			"required": [
				"value1",
				"value2",
				"value3"
			],
			"type": "object"
		},
		"TestClassModel": {
			"description": "This is a description of TestClassModel",
			"properties": {
				"publicStringProperty": {
					"type": "string",
					"description": "This is a description of a public string property",
					"minLength": 3,
					"maxLength": 20,
					"pattern": "^[a-zA-Z]+$"
				},
				"optionalPublicStringProperty": {
					"type": "string",
					"minLength": 0,
					"maxLength": 10
				},
				"stringProperty": {
					"type": "string"
				},
				"publicConstructorVar": {
					"type": "string",
					"description": "This is a description for publicConstructorVar"
				},
				"optionalPublicConstructorVar": {
					"type": "string"
				},
				"id": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"publicStringProperty",
				"stringProperty",
				"publicConstructorVar",
				"id"
			],
			"type": "object"
		},
		"GenericRequestTestModel": {
			"properties": {
				"name": {
					"type": "string"
				},
				"value": {
					"$ref": "#/definitions/TestModel"
				}
			},
			"required": [
				"name",
				"value"
			],
			"type": "object"
		},
		"Result": {
			"properties": {
				"value": {
					"type": "object"
				}
			},
			"required": [
				"value"
			],
			"type": "object"
		},
		"GenericModelTestModel": {
			"properties": {
				"result": {
					"$ref": "#/definitions/TestModel"
				}
			},
			"required": [
				"result"
			],
			"type": "object"
		},
		"GenericModelTestModel[]": {
			"properties": {
				"result": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TestModel"
					}
				}
			},
			"required": [
				"result"
			],
			"type": "object"
		},
		"GenericModelstring": {
			"properties": {
				"result": {
					"type": "string"
				}
			},
			"required": [
				"result"
			],
			"type": "object"
		},
		"GenericModelstring[]": {
			"properties": {
				"result": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"result"
			],
			"type": "object"
		},
		"ErrorResponseModel": {
			"properties": {
				"status": {
					"type": "number",
					"format": "double"
				},
				"message": {
					"type": "string"
				}
			},
			"required": [
				"status",
				"message"
			],
			"type": "object"
		},
		"ParameterTestModel": {
			"properties": {
				"firstname": {
					"type": "string"
				},
				"lastname": {
					"type": "string"
				},
				"age": {
					"type": "integer",
					"format": "int32",
					"minimum": 1,
					"maximum": 100
				},
				"weight": {
					"type": "number",
					"format": "float"
				},
				"human": {
					"type": "boolean"
				},
				"gender": {
					"type": "string",
					"enum": [
						"MALE",
						"FEMALE"
					]
				}
			},
			"required": [
				"firstname",
				"lastname",
				"age",
				"weight",
				"human",
				"gender"
			],
			"type": "object"
		},
		"UserResponseModel": {
			"properties": {
				"id": {
					"type": "number",
					"format": "double"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"name"
			],
			"type": "object"
		},
		"ValidateDateResponse": {
			"properties": {
				"minDateValue": {
					"type": "string",
					"format": "date-time"
				},
				"maxDateValue": {
					"type": "string",
					"format": "date-time"
				}
			},
			"required": [
				"minDateValue",
				"maxDateValue"
			],
			"type": "object"
		},
		"ValidateNumberResponse": {
			"properties": {
				"minValue": {
					"type": "number",
					"format": "double"
				},
				"maxValue": {
					"type": "number",
					"format": "double"
				}
			},
			"required": [
				"minValue",
				"maxValue"
			],
			"type": "object"
		},
		"ValidateBooleanResponse": {
			"properties": {
				"boolValue": {
					"type": "boolean"
				}
			},
			"required": [
				"boolValue"
			],
			"type": "object"
		},
		"ValidateStringResponse": {
			"properties": {
				"minLength": {
					"type": "string"
				},
				"maxLength": {
					"type": "string"
				},
				"patternValue": {
					"type": "string"
				}
			},
			"required": [
				"minLength",
				"maxLength",
				"patternValue"
			],
			"type": "object"
		},
		"ValidateModel": {
			"properties": {
				"floatValue": {
					"type": "number",
					"format": "float"
				},
				"doubleValue": {
					"type": "number",
					"format": "double"
				},
				"intValue": {
					"type": "integer",
					"format": "int32"
				},
				"longValue": {
					"type": "integer",
					"format": "int64"
				},
				"booleanValue": {
					"type": "boolean"
				},
				"arrayValue": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					}
				},
				"dateValue": {
					"type": "string",
					"format": "date"
				},
				"datetimeValue": {
					"type": "string",
					"format": "date-time"
				},
				"numberMax10": {
					"type": "number",
					"format": "double",
					"maximum": 10
				},
				"numberMin5": {
					"type": "number",
					"format": "double",
					"minimum": 5
				},
				"stringMax10Lenght": {
					"type": "string",
					"maxLength": 10
				},
				"stringMin5Lenght": {
					"type": "string",
					"minLength": 5
				},
				"stringPatternAZaz": {
					"type": "string",
					"pattern": "^[a-zA-Z]+$"
				},
				"arrayMax5Item": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					},
					"maxItems": 5
				},
				"arrayMin2Item": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					},
					"minItems": 2
				},
				"arrayUniqueItem": {
					"type": "array",
					"items": {
						"type": "number",
						"format": "double"
					}
				}
			},
			"required": [
				"floatValue",
				"doubleValue",
				"intValue",
				"longValue",
				"booleanValue",
				"arrayValue",
				"dateValue",
				"datetimeValue",
				"numberMax10",
				"numberMin5",
				"stringMax10Lenght",
				"stringMin5Lenght",
				"stringPatternAZaz",
				"arrayMax5Item",
				"arrayMin2Item",
				"arrayUniqueItem"
			],
			"type": "object"
		}
	},
	"info": {
		"title": "tsoa app",
		"description": "a description",
		"license": {
			"name": "MIT"
		},
		"version": "1.0"
	},
	"paths": {
		"/PutTest": {
			"put": {
				"operationId": "PutTestPutModel",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "body",
						"name": "model",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				]
			}
		},
		"/PutTest/Location": {
			"put": {
				"operationId": "PutTestPutModelAtLocation",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/PutTest/Multi": {
			"put": {
				"operationId": "PutTestPutWithMultiReturn",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TestModel"
							}
						}
					}
				},
				"parameters": []
			}
		},
		"/PutTest/WithId/{id}": {
			"put": {
				"operationId": "PutTestPutWithId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "number",
						"format": "double"
					}
				]
			}
		},
		"/PostTest": {
			"post": {
				"operationId": "PostTestPostModel",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "body",
						"name": "model",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				]
			},
			"patch": {
				"operationId": "PostTestUpdateModel",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "body",
						"name": "model",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				]
			}
		},
		"/PostTest/WithClassModel": {
			"post": {
				"operationId": "PostTestPostClassModel",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestClassModel"
						}
					}
				},
				"parameters": [
					{
						"in": "body",
						"name": "model",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TestClassModel"
						}
					}
				]
			}
		},
		"/PostTest/Location": {
			"post": {
				"operationId": "PostTestPostModelAtLocation",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/PostTest/Multi": {
			"post": {
				"operationId": "PostTestPostWithMultiReturn",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TestModel"
							}
						}
					}
				},
				"parameters": []
			}
		},
		"/PostTest/WithId/{id}": {
			"post": {
				"operationId": "PostTestPostWithId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "number",
						"format": "double"
					}
				]
			}
		},
		"/PostTest/WithBodyAndQueryParams": {
			"post": {
				"operationId": "PostTestPostWithBodyAndQueryParams",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "body",
						"name": "model",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					},
					{
						"in": "query",
						"name": "query",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/PostTest/GenericBody": {
			"post": {
				"operationId": "PostTestGetGenericRequest",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "body",
						"name": "genericReq",
						"required": true,
						"schema": {
							"$ref": "#/definitions/GenericRequestTestModel"
						}
					}
				]
			}
		},
		"/PatchTest": {
			"patch": {
				"operationId": "PatchTestPatchModel",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "body",
						"name": "model",
						"required": true,
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				]
			}
		},
		"/PatchTest/Location": {
			"patch": {
				"operationId": "PatchTestPatchModelAtLocation",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/PatchTest/Multi": {
			"patch": {
				"operationId": "PatchTestPatchWithMultiReturn",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TestModel"
							}
						}
					}
				},
				"parameters": []
			}
		},
		"/PatchTest/WithId/{id}": {
			"patch": {
				"operationId": "PatchTestPatchWithId",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "number",
						"format": "double"
					}
				]
			}
		},
		"/GetTest": {
			"get": {
				"operationId": "GetTestGetModel",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						},
						"examples": {
							"application/json": {
								"boolArray": [
									true,
									false
								],
								"boolValue": true,
								"id": 1,
								"modelValue": {
									"email": "test@test.com",
									"id": 100
								},
								"numberArray": [
									1,
									2,
									3
								],
								"numberValue": 1,
								"optionalString": "optional string",
								"strLiteralArr": [
									"Foo",
									"Bar"
								],
								"strLiteralVal": "Foo",
								"stringArray": [
									"string one",
									"string two"
								],
								"stringValue": "a string"
							}
						}
					}
				},
				"description": "This is a description of the getModel method\r\nthis is some more text on another line",
				"parameters": []
			}
		},
		"/GetTest/Current": {
			"get": {
				"operationId": "GetTestGetCurrentModel",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/GetTest/ClassModel": {
			"get": {
				"operationId": "GetTestGetClassModel",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestClassModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/GetTest/Multi": {
			"get": {
				"operationId": "GetTestGetMultipleModels",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TestModel"
							}
						}
					}
				},
				"parameters": []
			}
		},
		"/GetTest/{numberPathParam}/{booleanPathParam}/{stringPathParam}": {
			"get": {
				"operationId": "GetTestGetModelByParams",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"description": "This is a description for numberPathParam",
						"in": "path",
						"name": "numberPathParam",
						"required": true,
						"type": "number",
						"format": "double",
						"minimum": 1,
						"maximum": 10
					},
					{
						"in": "path",
						"name": "stringPathParam",
						"required": true,
						"type": "string",
						"minLength": 1,
						"maxLength": 10
					},
					{
						"in": "path",
						"name": "booleanPathParam",
						"required": true,
						"type": "boolean"
					},
					{
						"in": "query",
						"name": "booleanParam",
						"required": true,
						"type": "boolean"
					},
					{
						"in": "query",
						"name": "stringParam",
						"required": true,
						"type": "string",
						"minLength": 3,
						"maxLength": 10
					},
					{
						"description": "This is a description for numberParam",
						"in": "query",
						"name": "numberParam",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"in": "query",
						"name": "optionalStringParam",
						"required": false,
						"type": "string"
					}
				]
			}
		},
		"/GetTest/ResponseWithUnionTypeProperty": {
			"get": {
				"operationId": "GetTestGetResponseWithUnionTypeProperty",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/Result"
						}
					}
				},
				"parameters": []
			}
		},
		"/GetTest/UnionTypeResponse": {
			"get": {
				"operationId": "GetTestGetUnionTypeResponse",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "object"
						}
					}
				},
				"parameters": []
			}
		},
		"/GetTest/Request": {
			"get": {
				"operationId": "GetTestGetRequest",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/GetTest/DateParam": {
			"get": {
				"operationId": "GetTestGetByDataParam",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "date",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				]
			}
		},
		"/GetTest/ThrowsError": {
			"get": {
				"operationId": "GetTestGetThrowsError",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/GetTest/GeneratesTags": {
			"get": {
				"operationId": "GetTestGetGeneratesTags",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"tags": [
					"test",
					"test-two"
				],
				"parameters": []
			}
		},
		"/GetTest/HandleBufferType": {
			"get": {
				"operationId": "GetTestGetBuffer",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"type": "string",
							"format": "byte"
						}
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "buffer",
						"required": true,
						"type": "string",
						"format": "byte"
					}
				]
			}
		},
		"/GetTest/GenericModel": {
			"get": {
				"operationId": "GetTestGetGenericModel",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/GenericModelTestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/GetTest/GenericModelArray": {
			"get": {
				"operationId": "GetTestGetGenericModelArray",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/GenericModelTestModel[]"
						}
					}
				},
				"parameters": []
			}
		},
		"/GetTest/GenericPrimitive": {
			"get": {
				"operationId": "GetTestGetGenericPrimitive",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/GenericModelstring"
						}
					}
				},
				"parameters": []
			}
		},
		"/GetTest/GenericPrimitiveArray": {
			"get": {
				"operationId": "GetTestGetGenericPrimitiveArray",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/GenericModelstring[]"
						}
					}
				},
				"parameters": []
			}
		},
		"/DeleteTest": {
			"delete": {
				"operationId": "DeleteTestDeleteWithReturnValue",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/DeleteTest/Current": {
			"delete": {
				"operationId": "DeleteTestDeleteCurrent",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"parameters": []
			}
		},
		"/DeleteTest/{numberPathParam}/{booleanPathParam}/{stringPathParam}": {
			"delete": {
				"operationId": "DeleteTestGetModelByParams",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "numberPathParam",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"in": "path",
						"name": "stringPathParam",
						"required": true,
						"type": "string"
					},
					{
						"in": "path",
						"name": "booleanPathParam",
						"required": true,
						"type": "boolean"
					},
					{
						"in": "query",
						"name": "booleanParam",
						"required": true,
						"type": "boolean"
					},
					{
						"in": "query",
						"name": "stringParam",
						"required": true,
						"type": "string"
					},
					{
						"in": "query",
						"name": "numberParam",
						"required": true,
						"type": "number",
						"format": "double"
					}
				]
			}
		},
		"/MethodTest/Get": {
			"get": {
				"operationId": "MethodGetMethod",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/MethodTest/Post": {
			"post": {
				"operationId": "MethodPostMethod",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/MethodTest/Patch": {
			"patch": {
				"operationId": "MethodPatchMethod",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/MethodTest/Put": {
			"put": {
				"operationId": "MethodPutMethod",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/MethodTest/Delete": {
			"delete": {
				"operationId": "MethodDeleteMethod",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/MethodTest/Description": {
			"get": {
				"operationId": "MethodDescription",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"description": "method description",
				"parameters": []
			}
		},
		"/MethodTest/Tags": {
			"get": {
				"operationId": "MethodTags",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"tags": [
					"Tag1",
					"Tag2",
					"Tag3"
				],
				"parameters": []
			}
		},
		"/MethodTest/MultiResponse": {
			"get": {
				"operationId": "MethodMultiResponse",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/ErrorResponseModel"
						}
					},
					"401": {
						"description": "Unauthorized",
						"schema": {
							"$ref": "#/definitions/ErrorResponseModel"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorResponseModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/MethodTest/SuccessResponse": {
			"get": {
				"operationId": "MethodSuccessResponse",
				"produces": [
					"application/json"
				],
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"parameters": []
			}
		},
		"/MethodTest/ApiSecurity": {
			"get": {
				"operationId": "MethodApiSecurity",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/MethodTest/OauthSecurity": {
			"get": {
				"operationId": "MethodOauthSecurity",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"security": [
					{
						"tsoa_auth": [
							"write:pets",
							"read:pets"
						]
					}
				],
				"parameters": []
			}
		},
		"/MethodTest/DeprecatedMethod": {
			"get": {
				"operationId": "MethodDeprecatedMethod",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"deprecated": true,
				"parameters": []
			}
		},
		"/MethodTest/SummaryMethod": {
			"get": {
				"operationId": "MethodSummaryMethod",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"summary": "simple summary",
				"parameters": []
			}
		},
		"/ParameterTest/Query": {
			"get": {
				"operationId": "ParameterGetQuery",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ParameterTestModel"
						}
					}
				},
				"description": "Get test paramater",
				"parameters": [
					{
						"description": "Firstname description",
						"in": "query",
						"name": "firstname",
						"required": true,
						"type": "string"
					},
					{
						"description": "Lastname description",
						"in": "query",
						"name": "last_name",
						"required": true,
						"type": "string"
					},
					{
						"description": "Age description",
						"in": "query",
						"name": "age",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"description": "Weight description",
						"in": "query",
						"name": "weight",
						"required": true,
						"type": "number",
						"format": "float"
					},
					{
						"description": "Human description",
						"in": "query",
						"name": "human",
						"required": true,
						"type": "boolean"
					},
					{
						"description": "Gender description",
						"in": "query",
						"name": "gender",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/ParameterTest/Path/{firstname}/{last_name}/{age}/{weight}/{human}/{gender}": {
			"get": {
				"operationId": "ParameterGetPath",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ParameterTestModel"
						}
					}
				},
				"description": "Path test paramater",
				"parameters": [
					{
						"description": "Firstname description",
						"in": "path",
						"name": "firstname",
						"required": true,
						"type": "string"
					},
					{
						"description": "Lastname description",
						"in": "path",
						"name": "last_name",
						"required": true,
						"type": "string"
					},
					{
						"description": "Age description",
						"in": "path",
						"name": "age",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"description": "Weight description",
						"in": "path",
						"name": "weight",
						"required": true,
						"type": "number",
						"format": "float"
					},
					{
						"description": "Human description",
						"in": "path",
						"name": "human",
						"required": true,
						"type": "boolean"
					},
					{
						"description": "Gender description",
						"in": "path",
						"name": "gender",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/ParameterTest/Header": {
			"get": {
				"operationId": "ParameterGetHeader",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ParameterTestModel"
						}
					}
				},
				"description": "Header test paramater",
				"parameters": [
					{
						"description": "Firstname description",
						"in": "header",
						"name": "firstname",
						"required": true,
						"type": "string"
					},
					{
						"description": "Lastname description",
						"in": "header",
						"name": "last_name",
						"required": true,
						"type": "string"
					},
					{
						"description": "Age description",
						"in": "header",
						"name": "age",
						"required": true,
						"type": "integer",
						"format": "int32"
					},
					{
						"description": "Weight description",
						"in": "header",
						"name": "weight",
						"required": true,
						"type": "number",
						"format": "float"
					},
					{
						"description": "Human description",
						"in": "header",
						"name": "human",
						"required": true,
						"type": "boolean"
					},
					{
						"description": "Gender description",
						"in": "header",
						"name": "gender",
						"required": true,
						"type": "string"
					}
				]
			}
		},
		"/ParameterTest/Request": {
			"get": {
				"operationId": "ParameterGetRequest",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ParameterTestModel"
						}
					}
				},
				"description": "Request test paramater",
				"parameters": []
			}
		},
		"/ParameterTest/Body": {
			"post": {
				"operationId": "ParameterGetBody",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ParameterTestModel"
						}
					}
				},
				"description": "Body test paramater",
				"parameters": [
					{
						"description": "Body description",
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ParameterTestModel"
						}
					}
				]
			}
		},
		"/ParameterTest/BodyProps": {
			"post": {
				"operationId": "ParameterGetBodyProps",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ParameterTestModel"
						}
					}
				},
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"schema": {
							"properties": {
								"firstname": {
									"type": "string",
									"description": "firstname description"
								},
								"lastname": {
									"type": "string",
									"description": "lastname description"
								},
								"age": {
									"type": "integer",
									"format": "int32",
									"description": "age description"
								},
								"weight": {
									"type": "number",
									"format": "float",
									"description": "weight description"
								},
								"human": {
									"type": "boolean",
									"description": "human description"
								},
								"gender": {
									"type": "string",
									"enum": [
										"MALE",
										"FEMALE"
									],
									"description": "Gender description"
								}
							},
							"title": "ParameterGetBodyPropsBody",
							"type": "object",
							"required": [
								"firstname",
								"lastname",
								"age",
								"weight",
								"human",
								"gender"
							]
						}
					}
				]
			}
		},
		"/SecurityTest": {
			"get": {
				"operationId": "SecurityTestGetWithApi",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/UserResponseModel"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorResponseModel"
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/SecurityTest/Koa": {
			"get": {
				"operationId": "SecurityTestGetWithApiForKoa",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/UserResponseModel"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorResponseModel"
						}
					}
				},
				"security": [
					{
						"api_key": []
					}
				],
				"parameters": []
			}
		},
		"/SecurityTest/Oauth": {
			"get": {
				"operationId": "SecurityTestGetWithSecurity",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/UserResponseModel"
						}
					},
					"404": {
						"description": "Not Fount",
						"schema": {
							"$ref": "#/definitions/ErrorResponseModel"
						}
					}
				},
				"security": [
					{
						"tsoa_auth": [
							"write:pets",
							"read:pets"
						]
					}
				],
				"parameters": []
			}
		},
		"/Validate/parameter/date": {
			"get": {
				"operationId": "ValidateDateValidate",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ValidateDateResponse"
						}
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "minDateValue",
						"required": true,
						"type": "string",
						"format": "date"
					},
					{
						"in": "query",
						"name": "maxDateValue",
						"required": true,
						"type": "string",
						"format": "date"
					}
				]
			}
		},
		"/Validate/parameter/datetime": {
			"get": {
				"operationId": "ValidateDateTimeValidate",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ValidateDateResponse"
						}
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "minDateValue",
						"required": true,
						"type": "string",
						"format": "date-time"
					},
					{
						"in": "query",
						"name": "maxDateValue",
						"required": true,
						"type": "string",
						"format": "date-time"
					}
				]
			}
		},
		"/Validate/parameter/integer": {
			"get": {
				"operationId": "ValidateLongValidate",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ValidateNumberResponse"
						}
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "minValue",
						"required": true,
						"type": "integer",
						"format": "int32",
						"minimum": 5
					},
					{
						"in": "query",
						"name": "maxValue",
						"required": true,
						"type": "integer",
						"format": "int32",
						"maximum": 3
					}
				]
			}
		},
		"/Validate/parameter/float": {
			"get": {
				"operationId": "ValidateDoubleValidate",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ValidateNumberResponse"
						}
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "minValue",
						"required": true,
						"type": "number",
						"format": "float",
						"minimum": 5.5
					},
					{
						"in": "query",
						"name": "maxValue",
						"required": true,
						"type": "number",
						"format": "float",
						"maximum": 3.5
					}
				]
			}
		},
		"/Validate/parameter/boolean": {
			"get": {
				"operationId": "ValidateBooleanValidate",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ValidateBooleanResponse"
						}
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "boolValue",
						"required": true,
						"type": "boolean"
					}
				]
			}
		},
		"/Validate/parameter/string": {
			"get": {
				"operationId": "ValidateStringValidate",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ValidateStringResponse"
						}
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "minLength",
						"required": true,
						"type": "string",
						"minLength": 5
					},
					{
						"in": "query",
						"name": "maxLength",
						"required": true,
						"type": "string",
						"maxLength": 3
					},
					{
						"in": "query",
						"name": "patternValue",
						"required": true,
						"type": "string",
						"pattern": "^[a-zA-Z]+$"
					}
				]
			}
		},
		"/Validate/parameter/customRequiredErrorMsg": {
			"get": {
				"operationId": "ValidateCustomRequiredErrorMsg",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "longValue",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				]
			}
		},
		"/Validate/parameter/customInvalidErrorMsg": {
			"get": {
				"operationId": "ValidateCustomInvalidErrorMsg",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "longValue",
						"required": true,
						"type": "integer",
						"format": "int64"
					}
				]
			}
		},
		"/Validate/body": {
			"post": {
				"operationId": "ValidateBodyValidate",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/ValidateModel"
						}
					}
				},
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/ValidateModel"
						}
					}
				]
			}
		},
		"/Controller/normalStatusCode": {
			"get": {
				"operationId": "TestNormalStatusCode",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/Controller/customNomalStatusCode": {
			"get": {
				"operationId": "TestCustomNomalStatusCode",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Ok",
						"schema": {
							"$ref": "#/definitions/TestModel"
						}
					}
				},
				"parameters": []
			}
		},
		"/Controller/noContentStatusCode": {
			"get": {
				"operationId": "TestNoContentStatusCode",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"parameters": []
			}
		},
		"/Controller/customNoContentStatusCode": {
			"get": {
				"operationId": "TestCustomNoContentStatusCode",
				"produces": [
					"application/json"
				],
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"parameters": []
			}
		}
	},
	"produces": [
		"application/json"
	],
	"swagger": "2.0",
	"securityDefinitions": {
		"api_key": {
			"type": "apiKey",
			"name": "access_token",
			"in": "query"
		},
		"tsoa_auth": {
			"type": "oauth2",
			"authorizationUrl": "http://swagger.io/api/oauth/dialog",
			"flow": "implicit",
			"scopes": {
				"write:pets": "modify things",
				"read:pets": "read things"
			}
		}
	},
	"host": "localhost:3000",
	"api_key": {
		"type": "apiKey",
		"name": "api_key",
		"in": "header"
	},
	"tsoa_auth": {
		"type": "oauth2",
		"authorizationUrl": "http://swagger.io/api/oauth/dialog",
		"flow": "implicit",
		"scopes": {
			"write:pets": "modify things",
			"read:pets": "read things"
		}
	}
}